module Data.Geo.AlphaBeta where



_alphaBeta6 :: Fractional t => t -> (t, [t], [t])
_alphaBeta6 _n =
    let nx = _n * _n
        _b1 = 1/(1+_n)*(nx*(nx*(nx+4)+64)+256)/256;
        _alp1 = _n*(_n*(_n*(_n*(_n*(31564*_n-66675)+34440)+47250)-100800)+
                    75600)/151200;
        _bet1 = _n*(_n*(_n*(_n*(_n*(384796*_n-382725)-6720)+932400)-1612800)+
                    1209600)/2419200;
        _alp2 = nx*(_n*(_n*((863232-1983433*_n)*_n+748608)-1161216)+524160)/
                1935360;
        _bet2 = nx*(_n*(_n*((1695744-1118711*_n)*_n-1174656)+258048)+80640)/
                3870720;
        nx2 = nx * _n
        _alp3 = nx2*(_n*(_n*(670412*_n+406647)-533952)+184464)/725760;
        _bet3 = nx2*(_n*(_n*(22276*_n-16929)-15984)+12852)/362880;
        nx3 = nx2 * _n
        _alp4 = nx3*(_n*(6601661*_n-7732800)+2230245)/7257600;
        _bet4 = nx3*((-830251*_n-158400)*_n+197865)/7257600;
        nx4 = nx3 * _n
        _alp5 = (3438171-13675556*_n)*nx4/7983360;
        _bet5 = (453717-435388*_n)*nx4/15966720;
        nx5 = nx4 * _n
        _alp6 = 212378941*nx5/319334400;
        _bet6 = 20648693*nx5/638668800;
    in ( _b1
       , [0, _alp1,_alp2,_alp3,_alp4,_alp5,_alp6]
       , [0, _bet1,_bet2,_bet3,_bet4,_bet5,_bet6]
       )
